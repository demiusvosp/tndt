# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.version: 0.1.2
    app.support_url: http://tasks.demius.ru/p/tndt

    mail.sender_user: service@tasks.demius.ru

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '%kernel.project_dir%/src/*'
        exclude: '%kernel.project_dir%/src/{DependencyInjection,Entity,Exception,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '%kernel.project_dir%/src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    get_set_method_normalizer:
        class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
        tags: [serializer.normalizer]

    # JsonLOB services
    app.jlob_serializer:
        class: Symfony\Component\Serializer\Serializer
        arguments:
            $normalizers:
                - '@get_set_method_normalizer'
            $encoders:
                - '@serializer.encoder.json'

    # Event Subscribers and Listeners
    App\EventSubscriber\NoGeneratorListener:
        class: App\EventSubscriber\NoGeneratorListener
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    App\EventSubscriber\JSONBDeserializerListener:
        class: App\EventSubscriber\JSONBDeserializerListener
        arguments:
            - '@property_accessor'
            - '@app.jlob_serializer'
        tags:
            - { name: doctrine.event_listener, event: postLoad }

    # Various Services
    App\Service\ProjectContext:
        class: 'App\Service\ProjectContext'
        calls:
            - findCurrentProject: []

    project_context:
        alias: App\Service\ProjectContext

    App\Security\Hierarchy\HierarchyHelper:
        class: 'App\Security\Hierarchy\HierarchyHelper'
        arguments:
            - '@cache.permissions.adapter'
        configurator: ['@App\Security\Hierarchy\HierarchyConfigurator', 'configure']

    App\Security\Voter\PublicProjectVoter:
        class: 'App\Security\Voter\PublicProjectVoter'
        tags:
            - { name: monolog.logger, channel: security }

    App\Security\Voter\PrivateProjectVoter:
        class: 'App\Security\Voter\PrivateProjectVoter'
        tags:
            - { name: monolog.logger, channel: security }